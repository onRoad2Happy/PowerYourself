<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nwuer.core.dao.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.nwuer.core.entity.Task" >
    <constructor >
      <idArg column="id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="began_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="remind_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="location" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="is_finished" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="task_category_id" jdbcType="CHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.nwuer.core.entity.Task" >
    <constructor >
      <idArg column="id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="began_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="end_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="remind_time" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="location" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="is_finished" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="task_category_id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="notation" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, began_time, end_time, remind_time, location, user_id, is_finished, task_category_id
  </sql>
  <sql id="Blob_Column_List" >
    notation
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from task
    where id = #{id,jdbcType=CHAR}
  </delete>
    <delete id="deleteByUserId">
      delete from task
      where user_id=#{id}
    </delete>
    <insert id="insert" parameterType="com.nwuer.core.entity.Task" >
    insert into task (id, title, began_time, 
      end_time, remind_time, location, 
      user_id, is_finished, task_category_id, 
      notation)
    values (#{id,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{beganTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{remindTime,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{userId,jdbcType=CHAR}, #{isFinished,jdbcType=TINYINT}, #{taskCategoryId,jdbcType=CHAR}, 
      #{notation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nwuer.core.entity.Task" >
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="beganTime != null" >
        began_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="remindTime != null" >
        remind_time,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="isFinished != null" >
        is_finished,
      </if>
      <if test="taskCategoryId != null" >
        task_category_id,
      </if>
      <if test="notation != null" >
        notation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="beganTime != null" >
        #{beganTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remindTime != null" >
        #{remindTime,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="isFinished != null" >
        #{isFinished,jdbcType=TINYINT},
      </if>
      <if test="taskCategoryId != null" >
        #{taskCategoryId,jdbcType=CHAR},
      </if>
      <if test="notation != null" >
        #{notation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwuer.core.entity.Task" >
    update task
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="beganTime != null" >
        began_time = #{beganTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remindTime != null" >
        remind_time = #{remindTime,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="isFinished != null" >
        is_finished = #{isFinished,jdbcType=TINYINT},
      </if>
      <if test="taskCategoryId != null" >
        task_category_id = #{taskCategoryId,jdbcType=CHAR},
      </if>
      <if test="notation != null" >
        notation = #{notation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.nwuer.core.entity.Task" >
    update task
    set title = #{title,jdbcType=VARCHAR},
      began_time = #{beganTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      remind_time = #{remindTime,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=CHAR},
      is_finished = #{isFinished,jdbcType=TINYINT},
      task_category_id = #{taskCategoryId,jdbcType=CHAR},
      notation = #{notation,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwuer.core.entity.Task" >
    update task
    set title = #{title,jdbcType=VARCHAR},
      began_time = #{beganTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      remind_time = #{remindTime,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=CHAR},
      is_finished = #{isFinished,jdbcType=TINYINT},
      task_category_id = #{taskCategoryId,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="doneJob">
    UPDATE task
    set is_finished=1
    where id=#{id}
  </update>

  <update id="checkJobStatus">
      update task set is_finished=2
      where user_id=#{uid}
      and unix_timestamp(end_time)&lt;unix_timestamp(now())
  </update>

  <select id="selectAll" resultType="com.nwuer.core.vo.JobListVo">
    SELECT task.id,task.title,task.began_time,task.remind_time,task.end_time,category.category_name,notation
    from task join category on task.task_category_id=category.id
    where task.user_id=#{uid}
    and is_finished=#{is_finished}
    <if test="id != null" >
      and task_category_id = #{id}
    </if>
  </select>
    <select id="countJobByStatus" resultType="java.lang.Integer">
    SELECT count(1)
    from task
    where is_finished=#{status}
    and user_id=#{uid}
    </select>
  <select id="selectJobForUpdate" resultType="com.nwuer.core.vo.JobFormVo">
    select id,title,task_category_id,remind_time,end_time,notation
    from task
    where id=#{id}
    and user_id=#{uid}
  </select>
</mapper>