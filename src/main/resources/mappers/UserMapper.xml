<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nwuer.core.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.nwuer.core.entity.User" >
    <constructor >
      <idArg column="id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="last_login_datetime" jdbcType="TIMESTAMP" javaType="java.time.LocalDateTime" />
      <arg column="last_login_ip" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="activated" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, nickname, password, email, phone_number, last_login_datetime, last_login_ip, 
    avatar, role, activated
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=CHAR}
  </select>
    <select id="findByUsernameAndPassword" resultType="com.nwuer.core.dto.UserDto">
      SELECT id,username,password,email,last_login_datetime,role
      from user
      where username=#{username}
      and password=#{password}
      and activated=1

    </select>
  <select id="hasUser" resultType="com.nwuer.core.dto.UserDto">
    SELECT id,username,password,email,last_login_datetime,role
    from user
    where username=#{username}
  </select>
  <select id="selectById" resultType="com.nwuer.core.dto.UserDto">
    SELECT id,username,password,email,last_login_datetime,role
    from user
    where id=#{id}
  </select>
  <select id="selectAll" resultType="com.nwuer.core.vo.UserListVo">
    select id,username,email,last_login_datetime,activated
    from user where role=#{level}
  </select>
  <select id="selectUserBySearch" resultType="com.nwuer.core.vo.UserListVo">
    select id,username,email,last_login_datetime,activated
    from user
    where 1
    <if test='search_item == "id"' >
      and id LIKE concat(concat('%',#{search_value}),'%')
    </if>
    <if test='search_item == "username"' >
      and username LIKE concat(concat('%',#{search_value}),'%')
    </if>
    <if test='search_item == "email"' >
      and email LIKE concat(concat('%',#{search_value}),'%')
    </if>
    and role=10

  </select>
  <select id="verifyEmailExistence" resultType="java.lang.Integer">
    select count(1)
    from user
    where email=#{email}
  </select>
  <select id="verifyUsernameExistence" resultType="java.lang.Integer">
    select count(1)
    from user
    where username=#{username}
  </select>
    <select id="usernameCanUpdate" resultType="java.lang.Integer">
      SELECT count(1)
      from user
      where id!=#{id}
      and username=#{username}
    </select>
  <select id="emailCanUpdate" resultType="java.lang.Integer">
    SELECT count(1)
      from user
      where id!=#{id}
      and email=#{email}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.nwuer.core.entity.User" >
    insert into user (id, username, nickname, 
      password, email, phone_number, 
      last_login_datetime, last_login_ip, avatar, 
      role, activated)
    values (#{id,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{password,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{lastLoginDatetime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{role,jdbcType=CHAR}, #{activated,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.nwuer.core.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phoneNumber != null" >
        phone_number,
      </if>
      <if test="lastLoginDatetime != null" >
        last_login_datetime,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="activated != null" >
        activated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginDatetime != null" >
        #{lastLoginDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=CHAR},
      </if>
      <if test="activated != null" >
        #{activated,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nwuer.core.entity.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
        last_login_datetime = now(),
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=CHAR},
      </if>
      <if test="activated != null" >
        activated = #{activated,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nwuer.core.entity.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      last_login_datetime = #{lastLoginDatetime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      role = #{role,jdbcType=CHAR},
      activated = #{activated,jdbcType=BIT}
    where id = #{id,jdbcType=CHAR}
  </update>
    <update id="updateLoginTime">
      UPDATE user
      set last_login_datetime = #{date}
      where id=#{id}
    </update>
  <update id="reset">
    update user
    set password=#{passNew}
    where id=#{token}
  </update>
  <update id="freezeUser">
    update user
    set activated=0
    where id=#{id}
  </update>
  <update id="activeUser">
    update user
    set activated=1
    where id=#{id}
  </update>
  <update id="updateUserSelective" parameterType="com.nwuer.core.vo.RegistrationFormVo" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>